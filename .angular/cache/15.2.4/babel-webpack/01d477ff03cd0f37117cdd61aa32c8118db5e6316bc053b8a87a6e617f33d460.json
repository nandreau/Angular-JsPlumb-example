{"ast":null,"code":"import { FlowActionBlockComponent } from './blocks/flow-action-block/flow-action-block.component';\nimport { FlowNodeBlockComponent } from './blocks/flow-node-block/flow-node-block.component';\nimport { FlowSignalBlockComponent } from './blocks/flow-signal-block/flow-signal-block.component';\nimport { FlowNoteBlockComponent } from './blocks/flow-note-block/flow-note-block.component';\nimport { FlowEndBlockComponent } from './blocks/flow-end-block/flow-end-block.component';\nimport { FlowStartBlockComponent } from './blocks/flow-start-block/flow-start-block.component';\nimport * as i0 from \"@angular/core\";\nexport let BlockStoreService = /*#__PURE__*/(() => {\n  class BlockStoreService {\n    constructor() {}\n    /**\r\n     * Retorna el Type del Componente solicitado\r\n     */\n    getComponent(name) {\n      // TODO: Reemplazar con blockStoreService real\n      let blockComponent = FlowNodeBlockComponent;\n      switch (name) {\n        case 'flow.signal':\n          blockComponent = FlowSignalBlockComponent;\n          break;\n        case 'flow.action':\n          blockComponent = FlowActionBlockComponent;\n          break;\n        case 'flow.note':\n          blockComponent = FlowNoteBlockComponent;\n          break;\n        case 'flow.end':\n          blockComponent = FlowEndBlockComponent;\n          break;\n        case 'flow.start':\n          blockComponent = FlowStartBlockComponent;\n          break;\n      }\n      ;\n      return blockComponent;\n    }\n  }\n  BlockStoreService.ɵfac = function BlockStoreService_Factory(t) {\n    return new (t || BlockStoreService)();\n  };\n  BlockStoreService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BlockStoreService,\n    factory: BlockStoreService.ɵfac\n  });\n  return BlockStoreService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { find } from 'lodash';\n/**\r\n * Definición de los themes soportados\r\n */\nimport themesDefinitions from './themes/themes';\nimport * as i0 from \"@angular/core\";\n/**\r\n * Servicio para manipular los themes que utilizan\r\n * custom properties para definir sus propiedades\r\n *\r\n * Se tiene una lista de themes y luego se usan\r\n * variables css (custom properties) para establecer los valores\r\n *\r\n * Este servicio sólo se encarga de buscar en la lista\r\n * y devolver la lista de propiedades separadas por ';'\r\n *\r\n * Para usarlo en un componente:\r\n * [attr.style] = \"properties | safeStyle\"\r\n *\r\n * Dónde properties es el valor retornado por getThemeProperties\r\n */\nexport let ThemeManagerService = /*#__PURE__*/(() => {\n  class ThemeManagerService {\n    constructor() {}\n    /**\r\n     * Busca la definición en el theme en la lista\r\n     */\n    getThemeDefinition(themeCss) {\n      const definition = find(themesDefinitions, t => t.id === themeCss);\n      if (!definition) {\n        console.warn('Not definition found for themeCss=', themeCss);\n        /** Retornamos el primer theme definido */\n        return themesDefinitions[0];\n      }\n      /** Retorna la definition encontrada */\n      return definition;\n    }\n    /**\r\n     * Retorna las custom css properties de un theme\r\n     */\n    getThemeProperties(themeCss) {\n      const definition = this.getThemeDefinition(themeCss);\n      const result = [];\n      Object.keys(definition.properties).forEach(k => {\n        result.push(`${k}: ${definition.properties[k]}`);\n      });\n      return result.join('; ');\n    }\n  }\n  ThemeManagerService.ɵfac = function ThemeManagerService_Factory(t) {\n    return new (t || ThemeManagerService)();\n  };\n  ThemeManagerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ThemeManagerService,\n    factory: ThemeManagerService.ɵfac\n  });\n  return ThemeManagerService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}